{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./service/employee.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./header/header.component\";\nimport * as i5 from \"./employee/employee.component\";\nconst _c0 = [\"fileInput\"];\nconst _c1 = [\"addEmployeeButton\"];\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 38)(2, \"span\", 39);\n    i0.ɵɵtext(3, \"There are no Employees Added!\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"div\", 22)(2, \"app-employee\", 41);\n    i0.ɵɵlistener(\"onRemoveEmployee\", function AppComponent_div_12_Template_app_employee_onRemoveEmployee_2_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeEmployee($event));\n    })(\"onEditEmployee\", function AppComponent_div_12_Template_app_employee_onEditEmployee_2_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.editEmployee($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"employee\", employee_r8);\n  }\n}\nfunction AppComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"sup\");\n    i0.ɵɵtext(2, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Please enter your email! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"sup\");\n    i0.ɵɵtext(2, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Please enter vaild email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_button_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_50_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addEmployee());\n    });\n    i0.ɵɵtext(1, \" Insert \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_button_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_51_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.updateEmployee());\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_li_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const em_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", em_r17.lastname, \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    error: a0\n  };\n};\nclass AppComponent {\n  constructor(fb, employeeService) {\n    this.fb = fb;\n    this.employeeService = employeeService;\n    this.title = 'Employee';\n    this.submitted = false;\n    // educationOptions = [\n    //   '10th pass',\n    //   'diploma',\n    //   'graduation',\n    //   'post graduation',\n    //   'Phd'\n    // ]\n    this.showAdd = false;\n    this.showUpdate = false;\n    this.employeeForm = fb.group({});\n    this.employees = [];\n    this.employeesToDisplay = this.employees;\n  }\n  ngOnInit() {\n    this.employeeForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mobile: ['', Validators.required],\n      // birthday: ['', Validators.required],\n      // gender: ['', Validators.required],\n      // education: ['', Validators.required],\n      // company: ['', Validators.required],\n      jobExperience: ['', Validators.required],\n      salary: ['', Validators.required]\n      // profile:['',Validators.required]\n    });\n\n    this.getEmployeeData();\n  }\n  ngAfterViewInit() {}\n  getEmployeeData() {\n    axios.get('http://localhost:3000/api/v1/employee').then(Response => {\n      console.log(Response.data);\n      //try\n      this.emp = Response.data;\n    });\n    // this.employeeService.getEmployees().subscribe((res) => {\n    //   for (let emp of res) {\n    //     this.employees.unshift(emp)\n    //   }\n    //   this.employeesToDisplay = this.employees;\n    // });\n  }\n\n  addEmployee() {\n    console.log(this.employeeForm.valid);\n    if (this.employeeForm.valid) {\n      let employee = {\n        firstname: this.FirstName.value,\n        lastname: this.LastName.value,\n        email: this.Email.value,\n        mobile: this.Mobile.value,\n        // birthday: this.Birthday.value,\n        // gender: this.Gender.value,\n        // education: this.educationOptions[parseInt(this.Education.value)],\n        // company: this.Company.value,\n        jobExperience: this.JobExperience.value,\n        salary: this.Salary.value\n        // profile: this.fileInput.nativeElement.files[0]?.name,\n      };\n\n      this.employeeService.postEmployee(employee).subscribe(res => {\n        this.employees?.unshift(res);\n        this.clearForm();\n      });\n    } else {\n      alert(\"form is not valid\");\n      this.clearForm();\n    }\n  }\n  removeEmployee(event) {\n    this.employees.forEach((val, index) => {\n      if (val.id === parseInt(event)) {\n        this.employeeService.deleteEmployee(event).subscribe(res => {\n          this.employees.splice(index, 1);\n        });\n      }\n    });\n  }\n  clickAddEmployee() {\n    this.clearForm();\n    this.showAdd = true;\n    this.showUpdate = false;\n  }\n  editEmployee(event) {\n    this.showAdd = false;\n    this.showUpdate = true;\n    console.log(this.showAdd, this.showUpdate);\n    this.employees.forEach((val, ind) => {\n      if (val.id === event) {\n        // console.log(val);\n        this.getUpdateId = val.id;\n        this.setForm(val);\n      }\n    });\n  }\n  updateEmployee() {\n    console.log(\"this is update button click\");\n    if (this.employeeForm.valid) {\n      let updateEmployee = {\n        firstname: this.FirstName.value,\n        lastname: this.LastName.value,\n        email: this.Email.value,\n        mobile: this.Mobile.value,\n        // birthday: this.Birthday.value,\n        // gender: this.Gender.value,\n        // education: this.educationOptions[parseInt(this.Education.value)],\n        // company: this.Company.value,\n        jobExperience: this.JobExperience.value,\n        salary: this.Salary.value\n        // profile: this.fileInput.nativeElement.files[0]?.name,\n      };\n\n      this.employeeService.updateEmployee(this.getUpdateId, updateEmployee).subscribe(res => {\n        console.log(\"employee data is updated\", res);\n      }, error => {\n        console.error(\"error in updating epmployee\", error);\n      });\n      location.reload();\n    } else {\n      alert('Some input fields are empty');\n      this.clearForm();\n    }\n  }\n  setForm(emp) {\n    this.FirstName.setValue(emp.firstname);\n    this.LastName.setValue(emp.lastname);\n    // this.Birthday.setValue(emp.birthday);\n    this.Email.setValue(emp.email);\n    this.Mobile.setValue(emp.mobile);\n    // this.Gender.setValue(emp.gender);\n    // let educationIndex = 0;\n    // this.educationOptions.forEach((val, index) => {\n    //   if (val === emp.education) educationIndex = index;\n    // });\n    // this.Education.setValue(educationIndex);\n    // this.Company.setValue(emp.company)\n    this.JobExperience.setValue(emp.jobExperience);\n    this.Salary.setValue(emp.salary);\n    // this.fileInput.nativeElement = '';\n  }\n\n  searchEmployees(event) {\n    let filteredEmployees = [];\n    if (event === '') {\n      this.employeesToDisplay = this.employees;\n    } else {\n      filteredEmployees = this.employees.filter((val, index) => {\n        let targetKey = val.firstname.toLowerCase() + '' + val.lastname.toLowerCase();\n        let searchKey = event.toLowerCase();\n        return targetKey.includes(searchKey);\n      });\n      this.employeesToDisplay = filteredEmployees;\n    }\n  }\n  get myForm() {\n    return this.employeeForm.controls;\n  }\n  clearForm() {\n    this.FirstName.setValue('');\n    this.LastName.setValue('');\n    this.Email.setValue('');\n    // this.Birthday.setValue('');\n    // this.Gender.setValue('');\n    // this.Education.setValue('');\n    // this.Company.setValue('');\n    this.JobExperience.setValue('');\n    this.Salary.setValue('');\n    // this.fileInput.nativeElement.value = '';\n  }\n\n  get FirstName() {\n    return this.employeeForm.get('firstname');\n  }\n  get LastName() {\n    return this.employeeForm.get('lastname');\n  }\n  get Email() {\n    return this.employeeForm.get('email');\n  }\n  get Mobile() {\n    return this.employeeForm.get('mobile');\n  }\n  // public get Birthday(): FormControl {\n  //   return this.employeeForm.get('birthday') as FormControl;\n  // }\n  // public get Gender(): FormControl {\n  //   return this.employeeForm.get('gender') as FormControl;\n  // }\n  // public get Education(): FormControl {\n  //   return this.employeeForm.get('education') as FormControl;\n  // }\n  // public get Company(): FormControl {\n  //   return this.employeeForm.get('company') as FormControl;\n  // }\n  get JobExperience() {\n    return this.employeeForm.get('jobExperience');\n  }\n  get Salary() {\n    return this.employeeForm.get('salary');\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addEmployeeButton = _t.first);\n    }\n  },\n  decls: 55,\n  vars: 11,\n  consts: [[1, \"container-fluid\", \"g-0\"], [1, \"toolbar\"], [1, \"add-employee\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-success\", \"btn-lg\", 3, \"click\"], [1, \"search-employees\"], [\"type\", \"search\", \"placeholder\", \"Search Employees\", 1, \"form-control\", 3, \"input\"], [\"searchInput\", \"\"], [1, \"employees\", \"black-border\"], [\"class\", \"row mt-5\", 4, \"ngIf\"], [\"class\", \"row mt-4\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"row\", \"mt-2\"], [1, \"col\", \"form-heading\"], [1, \"text-secondary\", \"fst-italic\"], [1, \"row\"], [1, \"col\"], [\"type\", \"text\", \"placeholder\", \"First Name\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastname\", 1, \"form-control\"], [1, \"row\", \"w-75\"], [1, \"col\", \"mt-3\"], [\"type\", \"email\", \"name\", \"\", \"placeholder\", \"E-mail\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"string\", \"placeholder\", \"Mobile\", \"formControlName\", \"mobile\", 1, \"form-control\"], [1, \"row\", \"mt-3\"], [\"type\", \"number\", \"placeholder\", \"Job Experience (yrs)\", \"formControlName\", \"jobExperience\", 1, \"form-control\"], [\"type\", \"number\", \"placeholder\", \"Salary(LPA)\", \"formControlName\", \"salary\", 1, \"form-control\"], [1, \"modal-footer\"], [\"id\", \"addBtn\", \"type\", \"submit\", \"class\", \"btn btn-primary\", \"data-bs-dismiss\", \"modal\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"updateBtn\", \"type\", \"submit\", \"class\", \"btn btn-primary\", \"data-bs-dismiss\", \"modal\", 3, \"click\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"mt-5\"], [1, \"col\", \"text-center\"], [1, \"text-secondary\", \"fs-2\", \"fw-bold\", \"fst-italic\"], [1, \"row\", \"mt-4\"], [3, \"employee\", \"onRemoveEmployee\", \"onEditEmployee\"], [1, \"invalid-feedback\"], [\"id\", \"addBtn\", \"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"updateBtn\", \"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r18 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\");\n      i0.ɵɵelementStart(2, \"main\")(3, \"div\", 1)(4, \"div\", 2)(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.clickAddEmployee();\n      });\n      i0.ɵɵtext(6, \" Add Employees \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_8_listener() {\n        i0.ɵɵrestoreView(_r18);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.searchEmployees(_r0.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵtemplate(11, AppComponent_div_11_Template, 4, 0, \"div\", 8);\n      i0.ɵɵtemplate(12, AppComponent_div_12_Template, 3, 1, \"div\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12)(16, \"div\", 13)(17, \"h5\", 14);\n      i0.ɵɵtext(18, \"Enter Employee Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"button\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 16)(21, \"form\", 17)(22, \"div\", 18)(23, \"div\", 19)(24, \"h6\", 20);\n      i0.ɵɵtext(25, \"Personal Information\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 21)(27, \"div\", 22);\n      i0.ɵɵelement(28, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 22);\n      i0.ɵɵelement(30, \"input\", 24);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 25)(32, \"div\", 26);\n      i0.ɵɵelement(33, \"input\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, AppComponent_div_34_Template, 4, 0, \"div\", 28);\n      i0.ɵɵtemplate(35, AppComponent_div_35_Template, 4, 0, \"div\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 26);\n      i0.ɵɵelement(37, \"input\", 29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 21);\n      i0.ɵɵelement(39, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 30)(41, \"div\", 19)(42, \"h6\", 20);\n      i0.ɵɵtext(43, \"Job Information\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(44, \"div\", 30)(45, \"div\", 22);\n      i0.ɵɵelement(46, \"input\", 31);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"div\", 22);\n      i0.ɵɵelement(48, \"input\", 32);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"div\", 33);\n      i0.ɵɵtemplate(50, AppComponent_button_50_Template, 2, 0, \"button\", 34);\n      i0.ɵɵtemplate(51, AppComponent_button_51_Template, 2, 0, \"button\", 35);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(52, \"div\")(53, \"ul\");\n      i0.ɵɵtemplate(54, AppComponent_li_54_Template, 2, 1, \"li\", 36);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_4_0;\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.employees.length == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeesToDisplay);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, ctx.submitted && ctx.myForm[\"email\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && (ctx.employeeForm == null ? null : (tmp_4_0 = ctx.employeeForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"required\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && (ctx.myForm[\"email\"].errors == null ? null : ctx.myForm[\"email\"].errors[\"pattern\"]));\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAdd);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showUpdate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.emp);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.HeaderComponent, i5.EmployeeComponent],\n  styles: [\"main[_ngcontent-%COMP%]{\\r\\n    width: 90%;\\r\\n    margin: 3rem auto 0px;\\r\\n}\\r\\n\\r\\n.toolbar[_ngcontent-%COMP%]{\\r\\n    height: 4rem;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.add-employee[_ngcontent-%COMP%]{\\r\\n    width: 20%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.search-employees[_ngcontent-%COMP%]{\\r\\n    width: 50%;\\r\\n    height: 90%;\\r\\n    border-radius: 1rem;\\r\\n    box-shadow: 0px 0px 10px rgba(34, 34, 34,0.5);\\r\\n}\\r\\n\\r\\n.search-employees[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 1rem;\\r\\n    font-size: 1.3rem;\\r\\n}\\r\\n\\r\\napp-employee[_ngcontent-%COMP%]{\\r\\n    display: block;\\r\\n    width: 75%;\\r\\n    margin: 0px auto;\\r\\n    border-radius: 1rem;\\r\\n    box-shadow: 0px 0px 5px rgba(34, 34 , 34 , 0.5);\\r\\n}\\r\\n.form-heading[_ngcontent-%COMP%]{\\r\\n    border-top: 1px solid black;\\r\\n}\\r\\n\\r\\n.form-heading[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n    background-color: white;\\r\\n    width: 200px;\\r\\n    transform: translateY(-50%);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7O0FBRUg7SUFDSSxVQUFVO0lBQ1YscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsNkNBQTZDO0FBQ2pEOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLCtDQUErQztBQUNuRDtBQUNBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osMkJBQTJCO0FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmJsYWNrLWJvcmRlcntcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG59ICovXHJcblxyXG5tYWlue1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbjogM3JlbSBhdXRvIDBweDtcclxufVxyXG5cclxuLnRvb2xiYXJ7XHJcbiAgICBoZWlnaHQ6IDRyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmFkZC1lbXBsb3llZXtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uc2VhcmNoLWVtcGxveWVlc3tcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggcmdiYSgzNCwgMzQsIDM0LDAuNSk7XHJcbn1cclxuXHJcbi5zZWFyY2gtZW1wbG95ZWVzIGlucHV0e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG4gICAgZm9udC1zaXplOiAxLjNyZW07XHJcbn1cclxuXHJcbmFwcC1lbXBsb3llZXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICAgIG1hcmdpbjogMHB4IGF1dG87XHJcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiYSgzNCwgMzQgLCAzNCAsIDAuNSk7XHJcbn1cclxuLmZvcm0taGVhZGluZ3tcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG5cclxuLmZvcm0taGVhZGluZyBoNntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["Validators","axios","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_12_Template_app_employee_onRemoveEmployee_2_listener","$event","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","removeEmployee","AppComponent_div_12_Template_app_employee_onEditEmployee_2_listener","ctx_r12","editEmployee","ɵɵadvance","ɵɵproperty","employee_r8","AppComponent_button_50_Template_button_click_0_listener","_r14","ctx_r13","addEmployee","AppComponent_button_51_Template_button_click_0_listener","_r16","ctx_r15","updateEmployee","ɵɵtextInterpolate1","em_r17","lastname","AppComponent","constructor","fb","employeeService","title","submitted","showAdd","showUpdate","employeeForm","group","employees","employeesToDisplay","ngOnInit","firstname","required","email","mobile","jobExperience","salary","getEmployeeData","ngAfterViewInit","get","then","Response","console","log","data","emp","valid","employee","FirstName","value","LastName","Email","Mobile","JobExperience","Salary","postEmployee","subscribe","res","unshift","clearForm","alert","event","forEach","val","index","id","parseInt","deleteEmployee","splice","clickAddEmployee","ind","getUpdateId","setForm","error","location","reload","setValue","searchEmployees","filteredEmployees","filter","targetKey","toLowerCase","searchKey","includes","myForm","controls","ɵɵdirectiveInject","i1","FormBuilder","i2","EmployeeService","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵelement","AppComponent_Template_button_click_5_listener","AppComponent_Template_input_input_8_listener","_r18","_r0","ɵɵreference","ɵɵtemplate","AppComponent_div_11_Template","AppComponent_div_12_Template","AppComponent_div_34_Template","AppComponent_div_35_Template","AppComponent_button_50_Template","AppComponent_button_51_Template","AppComponent_li_54_Template","length","ɵɵpureFunction1","_c2","errors","tmp_4_0","hasError"],"sources":["C:\\Employee Management System\\Employee\\src\\app\\app.component.ts","C:\\Employee Management System\\Employee\\src\\app\\app.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from './models/employee.model';\nimport { EmployeeService } from './service/employee.service';\nimport  axios from 'axios';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  @ViewChild('fileInput') fileInput: any\n  @ViewChild('addEmployeeButton') addEmployeeButton: any;\n\n  title = 'Employee';\n\n  submitted = false;\n\n  employeeForm: FormGroup;\n\n  employees: Employee[];\n\n  employeesToDisplay: Employee[];\n\n  getUpdateId : any;\n\n  // educationOptions = [\n  //   '10th pass',\n  //   'diploma',\n  //   'graduation',\n  //   'post graduation',\n  //   'Phd'\n  // ]\n\n  showAdd : boolean = false;\n  showUpdate : boolean = false;\n\n  constructor(private fb: FormBuilder, private employeeService: EmployeeService) {\n    this.employeeForm = fb.group({})\n    this.employees = []\n    this.employeesToDisplay = this.employees\n    \n  }\n\n  ngOnInit(): void {\n   \n    this.employeeForm = this.fb.group({\n    \n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required , Validators.email]],\n      mobile : ['',Validators.required],\n      // birthday: ['', Validators.required],\n      // gender: ['', Validators.required],\n      // education: ['', Validators.required],\n      // company: ['', Validators.required],\n      jobExperience: ['', Validators.required],\n      salary: ['', Validators.required],\n      // profile:['',Validators.required]\n    });\n    this.getEmployeeData();\n  }\n\n  ngAfterViewInit(): void {\n  \n  }\n  //try\n  emp :any;\n  \n  getEmployeeData(){\n    axios.get('http://localhost:3000/api/v1/employee').then((Response: { data: any; })=>{\n      console.log(Response.data)\n\n      //try\n      this.emp = Response.data\n\n    })\n\n    // this.employeeService.getEmployees().subscribe((res) => {\n    //   for (let emp of res) {\n    //     this.employees.unshift(emp)\n    //   }\n    //   this.employeesToDisplay = this.employees;\n    // });\n  }\n\n  addEmployee() {\n    console.log(this.employeeForm.valid);\n    \n\n    if (this.employeeForm.valid) {\n      let employee: Employee = {\n        \n        firstname: this.FirstName.value,\n        lastname: this.LastName.value,\n        email: this.Email.value,\n        mobile : this.Mobile.value,\n        // birthday: this.Birthday.value,\n        // gender: this.Gender.value,\n        // education: this.educationOptions[parseInt(this.Education.value)],\n        // company: this.Company.value,\n        jobExperience: this.JobExperience.value,\n        salary: this.Salary.value,\n        // profile: this.fileInput.nativeElement.files[0]?.name,\n      }\n\n      this.employeeService.postEmployee(employee).subscribe((res) => {\n        this.employees?.unshift(res);\n        this.clearForm();\n      })\n    }\n    else {\n      alert(\"form is not valid\");\n      this.clearForm();\n    }\n\n  }\n\n  removeEmployee(event: any) {\n    this.employees.forEach((val, index) => {\n      if (val.id === parseInt(event)) {\n        this.employeeService.deleteEmployee(event).subscribe((res) => {\n          this.employees.splice(index, 1);\n        });\n      }\n    });\n  }\n\n  clickAddEmployee(){\n    this.clearForm();\n    this.showAdd = true\n    this.showUpdate = false\n  }\n\n  \n  editEmployee(event: any) {\n    \n    this.showAdd = false;\n    this.showUpdate  = true;\n\n    console.log(this.showAdd, this.showUpdate);\n\n    this.employees.forEach((val, ind) => {\n      if (val.id === event) {\n        // console.log(val);\n        this.getUpdateId = val.id;\n        this.setForm(val);\n      }\n   \n\n    });\n\n  \n  }\n\n  updateEmployee(){\n\n    console.log(\"this is update button click\")\n\n    if (this.employeeForm.valid) {\n      let updateEmployee: Employee = {\n        \n        firstname: this.FirstName.value,\n        lastname: this.LastName.value,\n        email: this.Email.value,\n        mobile :this.Mobile.value,\n        // birthday: this.Birthday.value,\n        // gender: this.Gender.value,\n        // education: this.educationOptions[parseInt(this.Education.value)],\n        // company: this.Company.value,\n        jobExperience: this.JobExperience.value,\n        salary: this.Salary.value,\n        // profile: this.fileInput.nativeElement.files[0]?.name,\n      }\n\n      this.employeeService.updateEmployee(this.getUpdateId, updateEmployee).subscribe(\n        \n\n        res => {console.log(\"employee data is updated\", res)},\n        error =>{console.error(\"error in updating epmployee\", error)}\n       \n        \n      )\n      location.reload();\n      \n    }\n    else {\n      alert('Some input fields are empty');\n      this.clearForm();\n    }\n\n    \n    \n  }\n  \n  \n\n  setForm(emp: Employee) {\n    this.FirstName.setValue(emp.firstname);\n    this.LastName.setValue(emp.lastname);\n    // this.Birthday.setValue(emp.birthday);\n    this.Email.setValue(emp.email);\n    this.Mobile.setValue(emp.mobile);\n    // this.Gender.setValue(emp.gender);\n\n    // let educationIndex = 0;\n    // this.educationOptions.forEach((val, index) => {\n    //   if (val === emp.education) educationIndex = index;\n    // });\n    // this.Education.setValue(educationIndex);\n\n    // this.Company.setValue(emp.company)\n    this.JobExperience.setValue(emp.jobExperience);\n    this.Salary.setValue(emp.salary);\n    // this.fileInput.nativeElement = '';\n  }\n\n  \n  searchEmployees(event : any){\n    let filteredEmployees : Employee[] = [];\n\n    if(event === ''){\n      this.employeesToDisplay = this.employees;\n\n    }\n    else{\n      filteredEmployees = this.employees.filter((val, index)=>{\n        let targetKey = val.firstname.toLowerCase() + '' + val.lastname.toLowerCase();\n        let searchKey = event.toLowerCase();\n\n        return targetKey.includes(searchKey);\n      });\n      this.employeesToDisplay = filteredEmployees\n    }\n  }\n\n\n  get myForm() {\n    return this.employeeForm.controls;\n  }\n\n \n\n  clearForm() {\n    this.FirstName.setValue('');\n    this.LastName.setValue('');\n    this.Email.setValue('');\n    // this.Birthday.setValue('');\n    // this.Gender.setValue('');\n    // this.Education.setValue('');\n    // this.Company.setValue('');\n    this.JobExperience.setValue('');\n    this.Salary.setValue('');\n    // this.fileInput.nativeElement.value = '';\n\n  }\n\n  public get FirstName(): FormControl {\n    return this.employeeForm.get('firstname') as FormControl;\n  }\n\n  public get LastName(): FormControl {\n    return this.employeeForm.get('lastname') as FormControl;\n  }\n  public get Email(): FormControl {\n    return this.employeeForm.get('email') as FormControl\n  }\n\n  public get Mobile(): FormControl {\n    return this.employeeForm.get('mobile') as FormControl\n  }\n  // public get Birthday(): FormControl {\n  //   return this.employeeForm.get('birthday') as FormControl;\n  // }\n\n  // public get Gender(): FormControl {\n  //   return this.employeeForm.get('gender') as FormControl;\n  // }\n\n  // public get Education(): FormControl {\n  //   return this.employeeForm.get('education') as FormControl;\n  // }\n\n  // public get Company(): FormControl {\n  //   return this.employeeForm.get('company') as FormControl;\n  // }\n\n  public get JobExperience(): FormControl {\n    return this.employeeForm.get('jobExperience') as FormControl;\n  }\n\n  public get Salary(): FormControl {\n    return this.employeeForm.get('salary') as FormControl;\n  }\n}\n","<div class=\"container-fluid g-0\">\r\n    <!-- header -->\r\n    <app-header></app-header>\r\n\r\n    <!-- main content -->\r\n\r\n    <main>\r\n        <!-- Toolbar to add and search employees -->\r\n        <div class=\"toolbar\">\r\n\r\n            <div class=\"add-employee\">\r\n                <button (click)=\"clickAddEmployee()\" type=\"button\" class=\"btn btn-outline-success btn-lg\" data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\" > \r\n                    Add Employees\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"search-employees\">\r\n                <input type=\"search\" class=\"form-control\" placeholder=\"Search Employees\" (input)=\"searchEmployees(searchInput.value)\"\r\n                #searchInput>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Area to display all the employees -->\r\n\r\n\r\n        <div class=\"employees black-border\">\r\n            <div class=\"row mt-5\" *ngIf=\"employees.length == 0\">\r\n                <div class=\"col text-center\">\r\n                    <span class=\"text-secondary fs-2 fw-bold fst-italic\">There are no Employees Added!</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mt-4\" *ngFor=\"let employee of employeesToDisplay ; let ei = index;\">\r\n                <div class=\"col\">\r\n                    <app-employee [employee] =\"employee\" (onRemoveEmployee)=\"removeEmployee($event)\" \r\n                    (onEditEmployee)=\"editEmployee($event)\"></app-employee>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Enter Employee Information</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n                <form [formGroup]=\"employeeForm\" >\r\n\r\n                      <!-- Personal Information -->\r\n                      <div class=\"row mt-2\">\r\n                        <div class=\"col form-heading\">\r\n                            <h6 class=\"text-secondary fst-italic\">Personal Information</h6>\r\n                        </div>\r\n                    </div>\r\n                    <!-- First and Last Name -->\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" formControlName=\"firstname\">\r\n\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" formControlName=\"lastname\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- Email -->\r\n\r\n                    <div class=\"row w-75\">\r\n                        <div class=\"col mt-3 \">\r\n                            <input type=\"email\" name=\"\" class=\"form-control\" placeholder=\"E-mail\"\r\n                                formControlName=\"email\" [ngClass]=\"{ error: submitted && myForm ['email'].errors}\">\r\n                        </div>\r\n\r\n                        <!-- error block -->\r\n                        <!-- <div class=\"invalid-feedback\" *ngIf=\"submitted && myForm['email'].errors?.required\"> -->\r\n\r\n                        <div class=\"invalid-feedback\"\r\n                            *ngIf=\"submitted && employeeForm?.get('email')?.hasError('required')\">\r\n                            <sup>*</sup> Please enter your email!\r\n                        </div>\r\n\r\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && myForm['email'].errors?.['pattern']\">\r\n                            <sup>*</sup> Please enter vaild email\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col mt-3\">\r\n                        <input type=\"string\" class=\"form-control\" placeholder=\"Mobile\" formControlName=\"mobile\">\r\n\r\n                    </div>\r\n\r\n                  \r\n                    <div class=\"row\">\r\n                        \r\n                        <!-- <div class=\"col\">\r\n                            <label for=\"datepicker\" class=\"form-label\">Birthdate</label>\r\n                            <input type=\"date\" class=\"form-control\" id=\"datepicker\" formControlName=\"birthday\">\r\n                        </div> -->\r\n                        <div class=\"col\">\r\n                            <!-- <div class=\"row\">\r\n                                <h6 class=\"text-secondary\">Gender</h6>\r\n                            </div> -->\r\n                            <!-- <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"male\" value=\"m\"\r\n                                            formControlName=\"gender\">\r\n                                        <label class=\"form-check-label\" for=\"male\">Male</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"female\" value=\"f\"\r\n                                            formControlName=\"gender\">\r\n                                        <label class=\"form-check-label\" for=\"male\">Female</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"row mt-3\">\r\n                        <div class=\"col\">\r\n                            <select class=\"form-select\" name=\"\" id=\"\" formControlName=\"education\">\r\n                                <option value=\"default\" selected>\r\n                                    Select Your Education\r\n                                </option>\r\n                                <option *ngFor=\"let option of educationOptions; let i=index;\" value=\"{{i}}\">\r\n                                    {{option | titlecase}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div> -->\r\n                    <!-- <div class=\"row mt-3\">\r\n                        <div class=\"col\">\r\n                            <label for=\"profile\" class=\"form-label\">Profile Image</label>\r\n                            <input type=\"file\" class=\"form-control\" id=\"profile\" #fileInput>\r\n                        </div>\r\n                    </div> -->\r\n\r\n\r\n                    <!-- job Information -->\r\n                    <div class=\"row mt-3\">\r\n                        <div class=\"col form-heading\">\r\n                            <h6 class=\"text-secondary fst-italic\">Job Information</h6>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Company Name\"\r\n                                formControlName=\"company\">\r\n                        </div>\r\n                    </div> -->\r\n                    <div class=\"row mt-3\">\r\n                        <div class=\"col\">\r\n                            <input type=\"number\" class=\"form-control\" placeholder=\"Job Experience (yrs)\"\r\n                                formControlName=\"jobExperience\">\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col\">\r\n                            <input type=\"number\" class=\"form-control\" placeholder=\"Salary(LPA)\"\r\n                                formControlName=\"salary\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n\r\n                <!-- *ngIf=\"showAdd\" -->\r\n                <div class=\"modal-footer\">\r\n                    <button \r\n                    id=\"addBtn\"\r\n                    *ngIf=\"showAdd\"\r\n                     type=\"submit\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"addEmployee()\">\r\n                        Insert\r\n                    </button>\r\n                   \r\n                    <!-- [disabled]=\"!employeeForm.valid\" -->\r\n                    <!-- *ngIf=\"showUpdate\" -->\r\n                    <button  \r\n                    id=\"updateBtn\"\r\n                    *ngIf=\"showUpdate\"\r\n                     type= \"submit\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" (click)=\"updateEmployee()\">\r\n                        Update\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div>\r\n    <ul>\r\n        <li *ngFor= \"let em of emp\">\r\n            {{em.lastname}}\r\n        </li>\r\n    </ul>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}