{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// fetch('http://localhost:3000/employees/1')\n//   .then(response => response.json())\n//   .then(data => {\n//     const employeeId = data.employeeId;\n//     console.log(employeeId); \n//   })\n//   .catch(error => {\n//     console.error('Error:', error);\n//   });\nclass EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/api/v1/employee';\n  }\n  getEmployees() {\n    return this.http.get(this.baseUrl);\n  }\n  postEmployee(employee) {\n    return this.http.post(this.baseUrl, employee);\n  }\n  deleteEmployee(id) {\n    // return this.http.delete(this.baseUrl + '/' + id);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(this.baseUrl + '/' + id, employee);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});\nexport { EmployeeService };","map":{"version":3,"names":["EmployeeService","constructor","http","baseUrl","getEmployees","get","postEmployee","employee","post","deleteEmployee","id","updateEmployee","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Employee Management System\\Employee\\src\\app\\service\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../models/employee.model';\n\n// fetch('http://localhost:3000/employees/1')\n//   .then(response => response.json())\n//   .then(data => {\n//     const employeeId = data.employeeId;\n   \n//     console.log(employeeId); \n//   })\n//   .catch(error => {\n//     console.error('Error:', error);\n//   });\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  baseUrl = 'http://localhost:3000/api/v1/employee'\n  constructor(private http : HttpClient) { }\n\n  \n\n  getEmployees(){\n\n    return this.http.get<Employee[]>(this.baseUrl);\n  }\n\n  postEmployee(employee : Employee){\n    return this.http.post<Employee>(this.baseUrl, employee)\n\n  }\n\n  deleteEmployee(id: string){\n    // return this.http.delete(this.baseUrl + '/' + id);\n  }\n\n  updateEmployee(id: string , employee : Employee){\n    return this.http.put(this.baseUrl + '/' + id , employee)\n  }\n}\n"],"mappings":";;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAIaA,eAAe;EAE1BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAG,uCAAuC;EACR;EAIzCC,YAAYA,CAAA;IAEV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,CAAC;EAChD;EAEAG,YAAYA,CAACC,QAAmB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,IAAI,CAACL,OAAO,EAAEI,QAAQ,CAAC;EAEzD;EAEAE,cAAcA,CAACC,EAAU;IACvB;EAAA;EAGFC,cAAcA,CAACD,EAAU,EAAGH,QAAmB;IAC7C,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAC,IAAI,CAACT,OAAO,GAAG,GAAG,GAAGO,EAAE,EAAGH,QAAQ,CAAC;EAC1D;;AAtBWP,eAAe,C;mBAAfA,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfhB,eAAe,C;SAAfA,eAAe;EAAAiB,OAAA,EAAfjB,eAAe,CAAAkB,IAAA;EAAAC,UAAA,EAHd;AAAM;SAGPnB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}