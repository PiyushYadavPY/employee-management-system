{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AppComponent = class AppComponent {\n  constructor(fb, employeeService) {\n    this.fb = fb;\n    this.employeeService = employeeService;\n    this.title = 'Employee';\n    // firstname : any\n    // lastname : any\n    // firstname : any\n    // lastname : any\n    this.educationOptions = ['10th pass', 'diploma', 'garduation', 'post graduation', 'Phd'];\n    this.employeeForm = fb.group({});\n    this.employees = [];\n    this.employeesToDisplay = this.employees;\n  }\n  // initVal() {\n  //   this.firstname = \"\"\n  //   this.lastname =\"\"\n  // }\n  ngOnInit() {\n    // this.initVal()\n    this.employeeForm = this.fb.group({\n      // firstname: this.fb.control(''),\n      // lastname: this.fb.control(''),\n      // birthday: this.fb.control(''),\n      // gender: this.fb.control(''),\n      // education: this.fb.control('default'),\n      // company: this.fb.control(''),\n      // jobExperience: this.fb.control(''),\n      // salary: this.fb.control('')\n      firstname: ['', Validators.required]\n    });\n    this.employeeService.getEmployees().subscribe(res => {\n      for (let emp of res) {\n        this.employees.unshift(emp);\n      }\n      this.employeesToDisplay = this.employees;\n    });\n  }\n  ngAfterViewInit() {\n    // this.buttontemp.nativeElement.click()\n  }\n  addEmployee() {\n    let employee = {\n      firstname: this.FirstName.value,\n      lastname: this.LastName.value,\n      birthday: this.Birthday.value,\n      gender: this.Gender.value,\n      education: this.educationOptions[parseInt(this.Education.value)],\n      company: this.Company.value,\n      jobExperience: this.JobExperience.value,\n      salary: this.Salary.value,\n      profile: this.fileInput.nativeElement.files[0]?.name\n    };\n    this.employeeService.postEmployee(employee).subscribe(res => {\n      this.employees?.unshift(res);\n      this.clearForm();\n    });\n  }\n  clearForm() {\n    this.FirstName.setValue('');\n    this.LastName.setValue('');\n    this.Birthday.setValue('');\n    this.Gender.setValue('');\n    this.Education.setValue('');\n    this.Company.setValue('');\n    this.JobExperience.setValue('');\n    this.Salary.setValue('');\n    this.fileInput.nativeElement.value = '';\n  }\n  get FirstName() {\n    return this.employeeForm.get('firstname');\n  }\n  get LastName() {\n    return this.employeeForm.get('lastname');\n  }\n  get Birthday() {\n    return this.employeeForm.get('birthday');\n  }\n  get Gender() {\n    return this.employeeForm.get('gender');\n  }\n  get Education() {\n    return this.employeeForm.get('education');\n  }\n  get Company() {\n    return this.employeeForm.get('company');\n  }\n  get JobExperience() {\n    return this.employeeForm.get('jobExperience');\n  }\n  get Salary() {\n    return this.employeeForm.get('salary');\n  }\n};\n__decorate([ViewChild('fileInput')], AppComponent.prototype, \"fileInput\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","ViewChild","Validators","AppComponent","constructor","fb","employeeService","title","educationOptions","employeeForm","group","employees","employeesToDisplay","ngOnInit","firstname","required","getEmployees","subscribe","res","emp","unshift","ngAfterViewInit","addEmployee","employee","FirstName","value","lastname","LastName","birthday","Birthday","gender","Gender","education","parseInt","Education","company","Company","jobExperience","JobExperience","salary","Salary","profile","fileInput","nativeElement","files","name","postEmployee","clearForm","setValue","get","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Employee Management System\\Employee\\src\\app\\app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from './models/employee.model';\nimport { EmployeeService } from './service/employee.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  @ViewChild('fileInput') fileInput : any\n  title = 'Employee';\n  \n  submitted : false | undefined;\n\n  employeeForm: FormGroup;\n\n  employees : Employee[] ;\n  employeesToDisplay : Employee[];\n\n  // firstname : any\n  // lastname : any\n \n\n  // firstname : any\n  // lastname : any\n  educationOptions = [\n    '10th pass',\n    'diploma',\n    'garduation', \n    'post graduation',\n    'Phd'\n  ]\n\n  constructor(private fb: FormBuilder ,private employeeService : EmployeeService ) {\n    this.employeeForm = fb.group({})\n    this.employees =[]\n    this.employeesToDisplay = this.employees\n  }\n\n  // initVal() {\n  //   this.firstname = \"\"\n  //   this.lastname =\"\"\n\n  // }\n  ngOnInit(): void {\n    // this.initVal()\n    this.employeeForm = this.fb.group({\n      // firstname: this.fb.control(''),\n      // lastname: this.fb.control(''),\n      // birthday: this.fb.control(''),\n      // gender: this.fb.control(''),\n      // education: this.fb.control('default'),\n      // company: this.fb.control(''),\n      // jobExperience: this.fb.control(''),\n      // salary: this.fb.control('')\n      firstname : ['', Validators.required]\n\n    });\n\n    this.employeeService.getEmployees().subscribe(res =>{\n      for(let emp of res){\n        this.employees.unshift(emp)\n      }\n      this.employeesToDisplay = this.employees;\n    })\n  }\n  ngAfterViewInit(): void {\n    // this.buttontemp.nativeElement.click()\n  }\n\n  addEmployee(){\n    let employee : Employee={\n      firstname : this.FirstName.value,\n      lastname : this.LastName.value,\n      birthday : this.Birthday.value,\n      gender : this.Gender.value,\n      education : this.educationOptions[parseInt(this.Education.value)],\n      company: this.Company.value,\n      jobExperience : this.JobExperience.value,\n      salary : this.Salary.value,\n      profile : this.fileInput.nativeElement.files[0]?.name,\n    }\n\n    this.employeeService.postEmployee(employee).subscribe((res)=>{\n      this.employees?.unshift(res);\n      this.clearForm();\n    })\n  }\n\n\n  clearForm(){\n    this.FirstName.setValue('');\n    this.LastName.setValue('');\n    this.Birthday.setValue('');\n    this.Gender.setValue('');\n    this.Education.setValue('');\n    this.Company.setValue('');\n    this.JobExperience.setValue('');\n    this.Salary.setValue('');\n    this.fileInput.nativeElement.value='';\n\n  }\n\n  public get FirstName(): FormControl{\n    return this.employeeForm.get('firstname') as FormControl;\n  }\n\n  public get LastName(): FormControl{\n    return this.employeeForm.get('lastname') as FormControl;\n  }\n\n  public get Birthday(): FormControl{\n    return this.employeeForm.get('birthday') as FormControl;\n  }\n\n  public get Gender(): FormControl{\n    return this.employeeForm.get('gender') as FormControl;\n  }\n\n  public get Education(): FormControl{\n    return this.employeeForm.get('education') as FormControl;\n  }\n\n  public get Company(): FormControl{\n    return this.employeeForm.get('company') as FormControl;\n  }\n\n  public get JobExperience(): FormControl{\n    return this.employeeForm.get('jobExperience') as FormControl;\n  }\n\n  public get Salary(): FormControl{\n    return this.employeeForm.get('salary') as FormControl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}